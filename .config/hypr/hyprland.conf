##########################
### 核心显示与渲染配置 ###
##########################

# 显示器设置
monitor=,1920x1080,auto,1

env = XDG_SESSION_TYPE,wayland

# XWayland 兼容性配置
xwayland {
    force_zero_scaling = true  # 强制XWayland缩放归零，防止像素化
}

# 渲染环境优化
exec-once = bash -c "xrdb -merge <<< 'Xft.dpi: 96'"  # XWayland应用DPI固定为96（适配1080P默认值）
env = XCURSOR_SIZE,24  # 统一光标大小为24像素（适配1080P）
env = HYPRCURSOR_SIZE,24 # Hyprland原生光标尺寸
env = GDK_SCALE,1      # GTK应用在XWayland下保持1倍缩放

# 禁用NVIDIA硬件光标加速
env = WLR_NO_HARDWARE_CURSORS,1

# 使用Intel核显VA-API加速（视频解码）
# 需要安装intel-media-driver libva-utils 包
# env = LIBVA_DRIVER_NAME,iHD  # 对应intel-media-driver（若用i965驱动则设为i965）
# env = VDPAU_DRIVER,va_gl     # VDPAU转VA-API兼容层
#
# 使用nvidia VA-API加速
# 需要安装 nvidia-vaapi-driver
env = LIBVA_DRIVER_NAME,nvidia
env = VDPAU_DRIVER,nvidia

# NVIDIA渲染后端配置
env = WLR_RENDERER,vulkan
env = WLR_RENDERER_ALLOW_SOFTWARE,1
env = GBM_BACKEND,nvidia-drm
env = __NV_PRIME_RENDER_OFFLOAD,1
env = __GLX_VENDOR_LIBRARY_NAME,nvidia
env = NVIDIA_DRIVER_CAPABILITIES,graphics,compute

# 确保Vulkan应用强制使用NVIDIA
env = __VK_LAYER_NV_optimus,NVIDIA_only
env = VK_ICD_FILENAMES,/usr/share/vulkan/icd.d/nvidia_icd.json

# env = NVD_BACKEND,direct # 绕过中间层进行渲染，提升渲染效率
# env = WLR_DRM_NO_ATOMIC,1 # 若遇到显示异常时启用

# env = WLR_DRM_DEVICES,/dev/dri/card0:/dev/dri/card1 # 强制使用独显

# exec-once = nvidia-settings --assign GPULogoBrightness=0

# NVIDIA多线程渲染优化
env = __GL_PERSISTENT_BUFFERS,1
env = __GL_THREADED_OPTIMIZATIONS,1

# NVIDIA游戏性能优化
env = __GL_MaxFramesAllowed,1
env = __GL_SYNC_TO_VBLANK,0 # 关闭垂直同步，可能导致画面撕裂

####################
### 设置软件别名 ###
####################

$terminal = foot
# $fileManager = nautilus
$menu = fuzzel

############################
### 应用程序环境适配配置 ###
############################

# Qt应用Wayland适配
env = QT_QPA_PLATFORM,wayland # 优先Wayland，失败回退XWayland
env = QT_AUTO_SCREEN_SCALE_FACTOR,1  # 自动适配屏幕缩放（避免手动设置DPI）
env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1  # 禁用QT窗口装饰（避免与Hyprland冲突）
env = QT_PLUGIN_PATH,/usr/lib/qt/plugins
env = QT_QPA_PLATFORM_PLUGIN_PATH,/usr/lib/qt/plugins/platforms

# GTK应用Wayland适配
env = GDK_BACKEND,wayland,x11  # 优先Wayland后端
env = CLUTTER_BACKEND,wayland,x11

# 输入法配置
env = INPUT_METHOD,fcitx5
# env = GTK_IM_MODULE,fcitx
env = QT_IM_MODULE,fcitx
env = XMODIFIERS,@im=fcitx
env = SDL_IM_MODULE,fcitx

# 本地化配置
env = LC_ALL,zh_CN.UTF-8

# 游戏兼容性配置
env = SDL_VIDEODRIVER,wayland      # SDL应用使用Wayland
env = MANGOHUD,1                   # 启用游戏性能监控（需安装mangohud）
env = PROTON_USE_WAYLAND_DISPLAY,1 # Steam游戏Wayland支持

########################
### 自动启动程序配置 ###
########################

# exec-once = waybar > /dev/null 2>&1 &
exec-once = hyprpaper > /dev/null 2>&1 &
exec-once = fcitx5 > /dev/null 2>&1 &
exec-once = fnott > /dev/null 2>&1 &
exec-once = ~/.config/fish/functions/battery_alert.fish
# exec-once = blueberry > /dev/null 2>&1 &

##########################
### 界面视觉与动画配置 ###
##########################

general {
    gaps_in = 3 # 窗口内部间隙
    gaps_out = 10 # 屏幕边缘间隙
    border_size = 2 # 窗口边框宽度

    allow_tearing = false
    layout = dwindle # 默认布局模式
    resize_on_border = false

    # 窗口边框颜色配置（45度渐变）
    # col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg # 活动窗口的边框颜色 
    # col.inactive_border = rgba(595959aa) # 非活动窗口的边框颜色
}

decoration {
    rounding = 10 # 窗口圆角半径
    rounding_power = 2

    active_opacity = 2.0
    inactive_opacity = 1.0

    shadow {
        enabled = true  # 启用窗口阴影
        range = 4 # 投影大小
        render_power = 3 # 投影强度
        color = rgba(1a1a1aee) # 投影颜色
    }

    # 模糊特效配置
    blur {
        enabled = true
        size = 3 # 模糊半径
        passes = 1 # 模糊次数
        vibrancy = 0.16 # 色彩增强
        new_optimizations = on # 模糊优化，通常保持打开
    }
}

# 窗口动画曲线配置
animations {
    enabled = yes
    bezier = easeOutQuint,0.23,1,0.32,1 # 自定义缓动曲线
    animation = windows, 1, 4.79, easeOutQuint # 窗口动画
}

dwindle {
    pseudotile = true # Master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = true # You probably want this
}

master {
    new_status = master
}

misc {
    force_default_wallpaper = -1 # Set to 0 or 1 to disable the anime mascot wallpapers
    disable_hyprland_logo = false # If true disables the random hyprland logo / anime girl background. :(
}

####################
### 输入设备配置 ###
####################

input {
    kb_layout = us              # 键盘布局
    follow_mouse = 1            # 窗口焦点是否随光标移动
    touchpad {
        natural_scroll = no     # 触摸板自然滚动
    }
    sensitivity = 0             # 鼠标灵敏度
    # accel_profile = flat        # 鼠标加速的配置方案, 默认开启，设置 flat 为禁用鼠标加速
}

gestures {
    workspace_swipe = false
}

device {
    name = epic-mouse-v1
    sensitivity = -0.5
}

##################
### 快捷键配置 ###
##################

$mainMod = SUPER

bind = $mainMod, Escape, exit,
bind = $mainMod, Q, killactive,
bind = $mainMod, D, exec, $menu > /dev/null 2>&1 &
bind = $mainMod, B, exec, firefox > /dev/null 2>&1 &
# bind = $mainMod, E, exec, $fileManager > /dev/null 2>&1 &
bind = $mainMod, W, exec, waybar > /dev/null 2>&1 &
bind = $mainMod SHIFT, W, exec, killall waybar
bind = $mainMod, T, exec, $terminal > /dev/null 2>&1 &

bind = $mainMod SHIFT, L, exec, hyprlock > /dev/null 2>&1 &
bind = $mainMod SHIFT, V, togglefloating, # 将当前窗口切换浮动和平铺
bind = $mainMod SHIFT, P, pseudo, # dwindle，“脱离” 当前的平铺结构
bind = $mainMod SHIFT, J, togglesplit, # dwindle，切换水平和垂直新窗口的产生方式

bind = $mainMod, F, fullscreen, 0
bind = $mainMod SHIFT, S, exec, ~/bash/screenshot.bash -r
bind = $mainMod, P, exec, ~/bash/screenshot.bash -f

# Move focus with mainMod + arrow keys
bind = $mainMod, h, movefocus, l
bind = $mainMod, l, movefocus, r
bind = $mainMod, k, movefocus, u
bind = $mainMod, j, movefocus, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

bind = $mainMod, M, togglespecialworkspace, scratchpad  # 切换窗口到暂存区
bind = $mainMod SHIFT, M, movetoworkspace, special:scratchpad  # 将窗口移至暂存区

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Laptop multimedia keys for volume and LCD brightness
# bindel = ,XF86AudioRaiseVolume, exec, wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 5%+
# bindel = ,XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
# bindel = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
# bindel = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
# bindel = ,XF86MonBrightnessUp, exec, brightnessctl set 5%+
# bindel = ,XF86MonBrightnessDown, exec, brightnessctl set 5%-
# Requires playerctl
# bindl = , XF86AudioNext, exec, playerctl next
# bindl = , XF86AudioPause, exec, playerctl play-pause
# bindl = , XF86AudioPlay, exec, playerctl play-pause
# bindl = , XF86AudioPrev, exec, playerctl previous

########################
### 高级窗口规则配置 ###
########################

windowrulev2 = suppressevent maximize, class:.*
windowrulev2 = nofocus,class:^$,title:^$,xwayland:1,floating:1,fullscreen:0,pinned:0
